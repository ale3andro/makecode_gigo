/// <reference path="../../pxtlib.d.ts" />
import * as Blockly from "blockly";
import { FieldCustom, FieldCustomOptions } from "./field_utils";
interface FieldScopedValueSelectorOptions extends FieldCustomOptions {
    defl?: string;
    type?: string;
    types?: string;
}
export declare class FieldScopedValueSelector extends Blockly.FieldLabel implements FieldCustom {
    isFieldCustom_: boolean;
    defl: string | undefined;
    types: string[];
    scopedValue: string | undefined;
    dragging: boolean;
    constructor(value: string, params: FieldScopedValueSelectorOptions);
    init(): void;
    dispose(): void;
    getValue(): string | null;
    setValue(newValue: any, fireChangeEvent?: boolean): void;
    onDragEvent: (ev: Blockly.Events.BlockDrag) => void;
    onWorkspaceChange: (ev: Blockly.Events.Abstract) => void;
    getFieldDescription(): string;
}
export {};
