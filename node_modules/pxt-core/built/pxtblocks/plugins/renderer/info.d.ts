import * as Blockly from "blockly";
import { CollapsedInputRow } from "./collapsedInputRow";
import { ConstantProvider } from "./constants";
/**
 * FIXME: 99% of this is straight from the Blocky implementation with only
 * the parts concerning collapsed inputs differing. Would be nice to find
 * a way to duplicate less of their code.
 */
export declare class RenderInfo extends Blockly.zelos.RenderInfo {
    constants_: ConstantProvider;
    measure(): void;
    protected createRows_(): void;
    protected populateBottomRow_(): void;
    protected addCollapsedRow_(activeRow: Blockly.blockRendering.Row): CollapsedInputRow;
}
