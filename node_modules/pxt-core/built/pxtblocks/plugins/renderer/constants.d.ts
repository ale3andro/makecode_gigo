import * as Blockly from "blockly";
export declare class ConstantProvider extends Blockly.zelos.ConstantProvider {
    /**
     * Data URI of svg for collapsing a block.
     */
    static COLLAPSE_IMAGE_DATAURI: string;
    /**
    * Data URI of svg for expanding a collapsed block.
    */
    static EXPAND_IMAGE_DATAURI: string;
    FIELD_TEXT_FONTFAMILY: string;
    FIELD_TEXT_FONTWEIGHT: string;
    /**
     * Color of the glow outline around highlighted blocks.
     */
    HIGHLIGHT_GLOW_COLOUR: string;
    ERROR_HIGHLIGHT_GLOW_COLOR: string;
    /**
     * The width of the glow outline around highlighted blocks.
     */
    HIGHLIGHT_GLOW_SIZE: number;
    /**
     * Radius of SVG path for ellipses in collapsed blocks.
     */
    ELLIPSES_RADIUS: number;
    /**
     * Spacing of ellipses in collapsed blocks.
     */
    ELLIPSES_SPACING: number;
    highlightOutlineFilterId?: string;
    highlightOutlineFilter?: SVGElement;
    errorOutlineFilterId?: string;
    errorOutlineFilter?: SVGElement;
    embossFilterOverride?: SVGElement;
    ellipses: string;
    createDom(svg: SVGElement, tagName: string, selector: string, injectionDivIfIsParent?: HTMLElement): void;
    dispose(): void;
    makeEllipses(): string;
    getCSS_(selector: string): string[];
    protected createHighlight(defs: SVGDefsElement, id: string, color: string): SVGFilterElement;
    protected createOutline(defs: SVGDefsElement, id: string): SVGFilterElement;
    shapeFor(connection: Blockly.RenderedConnection): import("blockly/core/renderers/common/constants").Shape;
}
