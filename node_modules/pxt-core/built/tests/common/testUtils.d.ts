/// <reference path="../../pxtlib.d.ts" />
/// <reference path="../../pxtcompiler.d.ts" />
/// <reference path="../../pxtpy.d.ts" />
export declare function getFilesByExt(dir: string, ext: string): string[];
export declare const testAppTarget: pxt.TargetBundle;
export interface PyConverterResult {
    python: string;
    ts: string;
    diagnostics: pxtc.KsDiagnostic[];
}
export declare function compareBaselines(a: string, b: string, opts?: ComparisonOptions): boolean;
interface ComparisonOptions {
    whitespaceSensitive?: boolean;
}
export declare function getAndStripComparisonOptions(input: string, isPython: boolean): [string, ComparisonOptions];
export declare function replaceFileExtension(file: string, extension: string): string;
export declare function getTestCompileOptsAsync(packageFiles?: pxt.Map<string>, dependencies?: string[], includeCommon?: boolean): Promise<pxtc.CompileOptions>;
export declare function ts2pyAsync(tsInput: string, dependency: string, includeCommon: boolean, caseName: string): Promise<string>;
export declare function py2tsAsync(pyInput: string, dependency: string, includeCommon: boolean, allowErrors: boolean, caseName: string): Promise<PyConverterResult>;
export declare function stsAsync(tsMain: string, dependency?: string, includeCommon?: boolean): Promise<pxtc.CompileResult>;
export {};
