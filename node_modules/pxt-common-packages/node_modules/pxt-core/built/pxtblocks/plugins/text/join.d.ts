import * as Blockly from "blockly";
import { InlineSvgsExtensionBlock } from "../functions";
declare type TextJoinMixinType = typeof TEXT_JOIN_MUTATOR_MIXIN;
interface TextJoinMixin extends TextJoinMixinType {
}
export declare type TextJoinBlock = InlineSvgsExtensionBlock & TextJoinMixin;
declare const TEXT_JOIN_MUTATOR_MIXIN: {
    itemCount_: number;
    valueConnections_: Blockly.Connection[];
    mutationToDom: (this: TextJoinBlock) => Element;
    domToMutation: (this: TextJoinBlock, xmlElement: Element) => void;
    storeValueConnections_: (this: TextJoinBlock) => void;
    restoreValueConnections_: (this: TextJoinBlock) => void;
    addItem_: (this: TextJoinBlock) => void;
    removeItem_: (this: TextJoinBlock) => void;
    update_: (this: TextJoinBlock, update: () => void) => void;
    /**
     * Modify this block to have the correct number of inputs.
     * @private
     * @this {Blockly.Block}
     */
    updateShape_: (this: TextJoinBlock) => void;
};
export {};
