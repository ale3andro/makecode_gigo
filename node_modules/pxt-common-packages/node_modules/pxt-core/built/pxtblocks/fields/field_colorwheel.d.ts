/// <reference path="../../pxtlib.d.ts" />
import * as Blockly from "blockly";
import { FieldCustom } from "./field_utils";
import { FieldSlider } from "../plugins/math";
export declare class FieldColorWheel extends FieldSlider implements FieldCustom {
    isFieldCustom_: boolean;
    private params;
    private channel_;
    /**
     * Class for a color wheel field.
     * @param {number|string} value The initial content of the field.
     * @param {Function=} opt_validator An optional function that is called
     *     to validate any constraints on what the user entered.  Takes the new
     *     text as an argument and returns either the accepted text, a replacement
     *     text, or null to abort the change.
     * @extends {Blockly.FieldNumber}
     * @constructor
     */
    constructor(value_: any, params: any, opt_validator?: Blockly.FieldValidator);
    /**
     * Set the gradient CSS properties for the given node and channel
     * @param {Node} node - The DOM node the gradient will be set on.
     * @private
     */
    setBackground_(node: HTMLElement): void;
    setReadout_(readout: Element, value: string): void;
    createColourStops_(): string[];
    colorWheel(wheelPos: number, channel?: string): string;
    hsvFast(hue: number, sat: number, val: number): string;
    private hex;
    private componentToHex;
}
